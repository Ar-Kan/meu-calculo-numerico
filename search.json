[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Meu Cálculo Numérico",
    "section": "",
    "text": "Bem-Vindo\nREAMAT é um projeto de escrita colaborativa de recursos educacionais abertos (REA) sobre tópicos de matemática e suas aplicações.\nNosso objetivo é de fomentar o desenvolvimento de materiais didáticos pela colaboração entre professores e alunos de universidades, institutos de educação e demais interessados no estudo e na aplicação da matemática nos mais diversos ramos da ciência e da tecnologia.\nO sucesso do projeto depende da colaboração! Participe diretamente da escrita dos recursos educacionais, dê sugestões ou avise-nos de erros e imprecisões. Toda a colaboração é bem-vinda. Veja como participar aqui.\nNós preparamos uma série de ações para ajudá-lo a participar. Em primeiro lugar, o acesso irrestrito aos materias pode se dar através deste site.",
    "crumbs": [
      "Bem-Vindo"
    ]
  },
  {
    "objectID": "index.html#bem-vindo",
    "href": "index.html#bem-vindo",
    "title": "Meu Cálculo Numérico",
    "section": "",
    "text": "Os códigos fontes e a documentação dos recursos estão disponíveis em repositórios GitHub públicos.",
    "crumbs": [
      "Bem-Vindo"
    ]
  },
  {
    "objectID": "index.html#licença",
    "href": "index.html#licença",
    "title": "Meu Cálculo Numérico",
    "section": "Licença",
    "text": "Licença\nNada disso estaria completo sem uma licença apropriada à colaboração. Por isso, escolhemos disponibilizar os materiais sob licença  Creative Commons Atribuição-CompartilhaIgual 3.0 Não Adaptada (CC-BY-SA 3.0) . Ou seja, você pode copiar, redistribuir, alterar e construir um novo material para qualquer uso, inclusive comercial. Leia a licença para mais informações.",
    "crumbs": [
      "Bem-Vindo"
    ]
  },
  {
    "objectID": "prefacio.html",
    "href": "prefacio.html",
    "title": "Prefácio",
    "section": "",
    "text": "Linguagens Computacionais\nEste livro busca abordar os tópicos de um curso de introdução ao cálculo numérico moderno oferecido a estudantes de matemática, física, engenharias e outros. A ênfase é colocada na formulação de problemas, implementação em computador da resolução e interpretação de resultados. Pressupõe-se que o estudante domine conhecimentos e habilidades típicas desenvolvidas em cursos de graduação de cálculo, álgebra linear e equações diferenciais. Conhecimento prévio em linguagem de computadores é fortemente recomendável, embora apenas técnicas elementares de programação sejam realmente necessárias.\nOs códigos computacionais dos métodos numéricos apresentados no livro são implementados em uma abordagem didática. Isto é, temos o objetivo de que a implementação em linguagem computacional auxilie o leitor no aprendizado das técnicas numéricas apresentadas no livro. Implementações computacionais eficientes de técnicas de cálculo numérico podem ser obtidas na série de livros ‘’Numerical Recipes’’, veja (Press 2007).",
    "crumbs": [
      "Prefácio"
    ]
  },
  {
    "objectID": "prefacio.html#linguagens-computacionais",
    "href": "prefacio.html#linguagens-computacionais",
    "title": "Prefácio",
    "section": "",
    "text": "PythonOctaveScilab\n\n\nA utilização da linguagem computacional Python.\n\n\nA utilização da linguagem computacional GNU Octave.\n\n\nA utilização do software livre Scilab.",
    "crumbs": [
      "Prefácio"
    ]
  },
  {
    "objectID": "introducao.html",
    "href": "introducao.html",
    "title": "Introdução",
    "section": "",
    "text": "Cálculo numérico é a disciplina que estuda as técnicas para a solução aproximada de problemas matemáticos. Estas técnicas são de natureza analítica e computacional. As principais preocupações normalmente envolvem exatidão e desempenho.\nAliado ao aumento contínuo da capacidade de computação disponível, o desenvolvimento de métodos numéricos tornou a simulação computacional de problemas matemáticos uma prática usual nas mais diversas áreas científicas e tecnológicas. As então chamadas simulações numéricas são constituídas de um arranjo de vários esquemas numéricos dedicados a resolver problemas específicos como, por exemplo: resolver equações algébricas, resolver sistemas de equações lineares, interpolar e ajustar pontos, calcular derivadas e integrais, resolver equações diferenciais ordinárias, etc. Neste livro, abordamos o desenvolvimento, a implementação, a utilização e os aspectos teóricos de métodos numéricos para a resolução desses problemas.\nTrabalharemos com problemas que abordam aspectos teóricos e de utilização dos métodos estudados, bem como com problemas de interesse na engenharia, na física e na matemática aplicada.\nA necessidade de aplicar aproximações numéricas decorre do fato de que esses problemas podem se mostrar intratáveis se dispomos apenas de meios puramente analíticos, como aqueles estudados nos cursos de cálculo e álgebra linear. Por exemplo, o teorema de Abel-Ruffini nos garante que não existe uma fórmula algébrica, isto é, envolvendo apenas operações aritméticas e radicais, para calcular as raízes de uma equação polinomial de qualquer grau, mas apenas casos particulares:\n\nSimplesmente isolar a incógnita para encontrar a raiz de uma equação do primeiro grau;\nFórmula de Bhaskara para encontrar raízes de uma equação do segundo grau;\nFórmula de Cardano para encontrar raízes de uma equação do terceiro grau;\nExiste expressão para equações de quarto grau;\nCasos simplificados de equações de grau maior que 4 onde alguns coeficientes são nulos também podem ser resolvidos.\n\nEquações não polinomiais podem ser ainda mais complicadas de resolver exatamente, por exemplo:\n\\[\\begin{equation}\n\\label{eq:exemplo1}\n\\cos(x)=x\\qquad \\text{ou}\\qquad xe^x= 10\n\\end{equation}\\]\nPara resolver o problema de valor inicial:\n\\[\\begin{equation}\n\\label{eq:exemplo2}\n\\begin{array}{l}\ny'+xy=x,\\\\\ny(0)=2,\n\\end{array}\n\\end{equation}\\]\npodemos usar o método de fator integrante e obtemos \\(y = 1 + e^{-x^2/2}\\). No entanto, não parece possível encontrar uma expressão fechada em termos de funções elementares para a solução exata do problema de valor inicial dado por:\n\\[\\begin{equation}\n\\label{eq:exemplo3}\n\\begin{array}{l}\ny'+xy=e^{-y},\\\\\ny(0)=2,\n\\end{array}.\n\\end{equation}\\]\nDa mesma forma, resolvemos a integral:\n\\[\\begin{equation}\n\\int_1^2xe^{-x^2}dx\n\\end{equation}\\]\npelo método da substituição e obtemos \\(\\frac{1}{2}(e^{-1} - e^{-4})\\). Porém a integral:\n\\[\\begin{equation}\n\\int_1^2 e^{-x^2} dx\n\\end{equation}\\]\nnão pode ser expressa analiticamente em termos de funções elementares, como uma consequência do teorema de Liouville.\nA maioria dos problemas envolvendo fenômenos reais produzem modelos matemáticos cuja solução analítica é difícil (ou impossível) de obter, mesmo quando provamos que a solução existe. Nesse curso propomos calcular aproximações numéricas para esses problemas, que apesar de, em geral, serem diferentes da solução exata, mostraremos que elas podem ser bem próximas.\nPara entender a construção de aproximações é necessário estudar como funciona a aritmética implementada nos computadores e erros de arredondamento. Como computadores, em geral, usam uma base binária para representar números, começaremos falando em mudança de base.",
    "crumbs": [
      "Introdução"
    ]
  },
  {
    "objectID": "capitulos/01_aritmetica/00_capitulo.html",
    "href": "capitulos/01_aritmetica/00_capitulo.html",
    "title": "Capítulo 1: Representação de números e aritmética de máquina",
    "section": "",
    "text": "Neste capítulo, abordaremos formas de representar números reais em computadores. Iniciamos com uma discussão sobre representação posicional e mudança de base. Então, enfatizaremos a representação de números com quantidade finita de dígitos, mais especificamente, as representações de números inteiros, ponto fixo e ponto flutuante em computadores.\nA representação de números e a aritmética em computadores levam aos chamados erros de arredondamento e de truncamento. Ao final deste capítulo, abordaremos os efeitos do erro de arredondamento na computação científica.",
    "crumbs": [
      "Capítulo 1: Representação de números e aritmética de máquina"
    ]
  },
  {
    "objectID": "capitulos/01_aritmetica/01_sistema_de_numeracao.html",
    "href": "capitulos/01_aritmetica/01_sistema_de_numeracao.html",
    "title": "1  Sistema de numeração e mudança de base",
    "section": "",
    "text": "1.1 Exercícios resolvidos\nUsualmente, utilizamos o sistema de numeração decimal, isto é, base 10, para representar números. Esse é um sistema de numeração em que a posição do algarismo indica a potência de \\(10\\) pela qual seu valor é multiplicado.\nO sistema de numeração posicional também pode ser usado com outras bases. Vejamos a seguinte definição.\nAs linguagens oferecem algumas funções para a conversão de números inteiros em dada base para a base decimal. Por exemplo, temos:\nNos exemplos acima vimos como converter números representados em um sistema de numeração de base \\(b\\) para o sistema decimal. Agora, vamos estudar como fazer o processo inverso. Isto é, dado um número decimal \\((X)_{10}\\) queremos escrevê-lo em uma outra base \\(b\\), isto é, queremos obter a seguinte representação:\n\\[\\begin{equation}\n  \\begin{split}\n    (X)_{10} &= (d_nd_{n-1}\\cdots d_0,d_{-1}\\cdots)_{b} \\\\\n    &= d_n\\cdot b^{n}+d_{n-1}\\cdot b^{n-1}+\\cdots + d_0\\cdot b^0+d_{-1}\\cdot b^{-1}+d_{-2}\\cdot b^{-2}+\\cdots\n  \\end{split}\n\\end{equation}\\]\nSeparando as partes inteira e fracionária de \\(X\\), isto é, \\(X = X^{\\mbox{i}} + X^{\\mbox{f}}\\), temos \\[\\begin{equation}\nX^{\\mbox{i}} = d_n\\cdot b^{n}+ \\cdots+d_{n-1}b^{n-1} \\cdots  +d_1\\cdot b^1 +d_0\\cdot b^0\n\\end{equation}\\] e \\[\\begin{equation}\n  X^{\\mbox{f}} = \\frac{d_{-1}}{b^1} + \\frac{d_{-2}}{b^{2}} + \\cdots\n\\end{equation}\\] Nosso objetivo é determinar os algarismos \\(\\{d_n, d_{n-1}, ...\\}\\).\nPrimeiramente, vejamos como tratar a parte inteira \\(X^{\\mbox{i}}\\). Calculando o quociente de \\(X^{\\mbox{i}}\\) por \\(b\\), temos:\n\\[\\begin{equation}\n  \\frac{X^{\\mbox{i}}}{b}=   \\frac{d_0}{b}+d_1+d_2\\cdot b^1+\\cdots+d_{n-1}\\cdot b^{n-2} +d_n\\cdot b^{n-1}.\n\\end{equation}\\]\nObserve que \\(d_0\\) é o resto da divisão de \\(X^{\\mbox{i}}\\) por \\(b\\), pois \\(d_1+d_2\\cdot b^1+\\cdots+d_{n-1}\\cdot b^{n-2} +d_n\\cdot b^{n-1}\\) é inteiro e \\(\\frac{d_0}{b}\\) é uma fração com \\(d_0&lt;b\\). Da mesma forma, o resto da divisão de \\(d_1+d_2\\cdot b^1+\\cdots+d_{n-1}\\cdot b^{n-2} +d_n\\cdot b^{n-1}\\) por \\(b\\) é \\(d_1\\). Ou seja, repetindo este processo encontramos os algarismos \\(d_0\\), \\(d_1\\), \\(d_2\\), \\(\\ldots\\), \\(d_n\\).\nVamos, agora, converter a parte fracionária \\(X^{\\mbox{f}}\\) do número decimal \\(X\\) para o sistema de base \\(b\\). Multiplicando \\(X^{\\mbox{f}}\\) por \\(b\\), temos\n\\[\\begin{equation}\n  bX^{\\mbox{f}}=d_{-1}+\\frac{d_{-2}}{b}+\\frac{d_{-3}}{b^2}+\\cdots\n\\end{equation}\\]\nObserve que a parte inteira desse produto é \\(d_{-1}\\) e \\(\\frac{d_{-2}}{b}+\\frac{d_{-3}}{b^2}+\\cdots\\) é a parte fracionária. Quando multiplicamos \\(\\frac{d_{-2}}{b}+\\frac{d_{-3}}{b^2}+\\cdots\\) por \\(b\\) novamente, encontramos \\(d_{-2}\\). Repetindo este processo encontramos os demais algarismos.\nPodemos usar os comandos para truncamento e resto da divisão para computar esta conversão da seguinte forma\nConversão da parte fracionária. Para converter a parte fracionária, fazemos sucessivas multiplicações por \\(b=2\\) obtendo\n\\[\\begin{align}\n  0,625 &= 1,25\\cdot 2^{-1} = 1\\cdot 2^{-1} + 0,25\\cdot 2^{-1}\\\\\n  &= 1\\cdot 2^{-1} + (0,5\\cdot 2^{-1})\\cdot 2^{-1} = 1\\cdot 2^{-1} + 0,5\\cdot 2^{-2}\\\\\n  &= 1\\cdot 2^{-1} + (1\\cdot 2^{-1})\\cdot 2^{-2} = 1\\cdot 2^{-1} + 1\\cdot 2^{-3}.\n\\end{align}\\]\nOu seja, temos que \\(0,625 = (0,101)_2\\).\nPodemos computar esta conversão da parte fracionária da seguinte forma\nConclusão. Da conversão das partes inteira e fracionária de \\(9,625\\), obtemos \\(9 = (1001)_2\\) e \\(0,625 = (0,101)_2\\). Logo, concluímos que \\(9,625 = (1001,101)_2\\).",
    "crumbs": [
      "Capítulo 1: Representação de números e aritmética de máquina",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Sistema de numeração e mudança de base</span>"
    ]
  },
  {
    "objectID": "capitulos/01_aritmetica/01_sistema_de_numeracao.html#exercícios-resolvidos",
    "href": "capitulos/01_aritmetica/01_sistema_de_numeracao.html#exercícios-resolvidos",
    "title": "1  Sistema de numeração e mudança de base",
    "section": "",
    "text": "1.1.1 Exercício\nObtenha a representação do número \\(125,58\\bar{3}\\) na base \\(6\\).\n\n\n\n\n\n\nResposta\n\n\n\n\n\nDecompomos \\(125,58\\bar{3}\\) nas suas partes inteira \\(125\\) e fracionária \\(0,58\\bar{3}\\). Então, convertemos cada parte.\nConversão da parte inteira. Vamos escrever o número \\(125\\) na base \\(6\\). Para tanto, fazemos sucessivas divisões por \\(6\\) como segue:\n\\[\\begin{equation}\n  \\begin{split}\n    125 &= 20\\cdot 6 + 5\\quad(\\mbox{$125$ dividido por $6$ é igual a $20$ e resta $5$})\\\\\n    &= (3\\cdot 6 + 2)\\cdot 6 + 5 = 3\\cdot 6^2 + 2\\cdot 6 + 5,\n  \\end{split}\n\\end{equation}\\]\nlogo \\(125 = (325)_6\\).\nEstes cálculos podem ser feitos da seguinte forma: primeiro calcula o resto da divisão entre dois números, depois retorna a parte inteira de um número dado. No nosso exemplo, temos:\n\nPythonScilabOctave\n\n\n&gt;&gt;&gt; q = 125; d0 = (q % 6); print(q,d0)\n&gt;&gt;&gt; q = int(q/6); d1 = (q % 6); print(q,d1)\n&gt;&gt;&gt; q = int(q/6); d2 = (q % 6); print(q,d2)\n\n\n--&gt;q = 125, d0 = modulo(q,6)\n--&gt;q = int(q/6), d1 = modulo(q,6)\n--&gt;q = int(q/6), d2 = modulo(q,6)\n\n\n&gt;&gt; x = 125\nx =  125\n&gt;&gt; d = mod(x,6), x = fix(x/6)\nd =  5\nx =  20\n&gt;&gt; d = mod(x,6), x = fix(x/6)\nd =  2\nx =  3\n&gt;&gt; d = mod(x,6), x = fix(x/6)\nd =  3\nx = 0\n\n\n\nVerifique!\nConversão da parte fracionária. Para converter \\(0,58\\bar{3}\\) para a base \\(6\\), fazemos sucessivas multiplicações por \\(6\\) como segue:\n\\[\\begin{equation}\n  \\begin{split}\n  0,58\\overline{3} &= 3,5\\cdot 6^{-1}\\quad(\\mbox{$0,58\\overline{3}$ multiplicado por $6$ é igual a $3,5$})\\\\\n  &= 3\\cdot 6^{-1} + 0,5\\cdot 6^{-1}\\\\\n  &= 3\\cdot 6^{-1} + (3\\cdot 6^{-1})\\cdot 6^{-1}\\\\\n  &= 3\\cdot 6^{-1} + 3\\cdot 6^{-2},\n  \\end{split}\n\\end{equation}\\]\nlogo \\(0,58\\overline{3} = (0,33)_6\\).\n\nPythonScilabOctave\n\n\n&gt;&gt;&gt; x = 0.58 + 1/3/100; print(\"x = {}\".format(x))\nx = 0.5833333333333333\n&gt;&gt;&gt; d = int(6*x); x = round(6*x,1) - d; print(\"d = {}, x = {}\".format(d, x))\nd = 3, x = 0.5\n&gt;&gt;&gt; d = int(6*x); x = round(6*x,1) - d; print(\"d = {}, x = {}\".format(d, x))\nd = 3, x = 0.0\n\n\n# As contas feitas aqui, também podem ser computadas no Scilab. Você sabe como?\n\n\n&gt;&gt; x = 0.58 + 1/3/100\nx =  0.58333\n&gt;&gt; d = fix(6*x), x = 6*x - d\nd =  3\nx =  0.50000\n&gt;&gt; x = 0.5 #isso é realmente necessário?\nx =  0.50000\n&gt;&gt; d = fix(6*x), x = 6*x - d\nd =  3\nx = 0\n\n\n\n\n\n\n\n\n1.1.2 Exercício\nObtenha a representação na base \\(4\\) do número \\((101,01)_2\\).\n\n\n\n\n\n\nResposta\n\n\n\n\n\nComeçamos convertendo \\((101,01)_2\\) para a base decimal:\n\\[\\begin{equation}\n  (101,01)_2 = 1\\cdot 2^2 + 1\\cdot 2^0 + 1\\cdot 2^{-2} = 5,25.\n\\end{equation}\\]\nEntão, convertemos \\(5,25\\) para a base \\(4\\). Para sua parte inteira, temos\n\\[\\begin{equation}\n  5 = 1\\cdot 4 + 1 = (11)_4.\n\\end{equation}\\]\nPara sua parte fracionária, temos\n\\[\\begin{equation}\n  0,25 = 1\\cdot 4^{-1} = (0,1)_4.\n\\end{equation}\\]\nLogo, \\((101,01)_2 = (11,1)_4\\). Verifique estas contas no computador!",
    "crumbs": [
      "Capítulo 1: Representação de números e aritmética de máquina",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Sistema de numeração e mudança de base</span>"
    ]
  },
  {
    "objectID": "capitulos/01_aritmetica/01_sistema_de_numeracao.html#exercícios",
    "href": "capitulos/01_aritmetica/01_sistema_de_numeracao.html#exercícios",
    "title": "1  Sistema de numeração e mudança de base",
    "section": "1.2 Exercícios",
    "text": "1.2 Exercícios\n\n1.2.1 Exercício\nConverta para base decimal cada um dos seguintes números:\n\n\\((100)_2\\)\n\\((100)_3\\)\n\\((100)_b\\)\n\\((12)_5\\)\n\\((AA)_{16}\\)\n\\((7,1)_8\\)\n\\((3,12)_5\\)\n\n\n\n\n\n\n\nResposta\n\n\n\n\n\n\n~\\(4\\)\n~\\(9\\)\n~\\(b^2\\)\n~\\(7\\)\n~\\(170\\)\n~\\(7,125\\)\n~\\(3,28\\)\n\n\n\n\n\n\n1.2.2 Exercício\nEscreva cada número dado para a base \\(b\\).\n\n\\((45,1)_8\\) para a base \\(b=2\\)\n\\((21,2)_8\\) para a base \\(b=16\\)\n\\((1001,101)_2\\) para a base \\(b=8\\)\n\\((1001,101)_2\\) para a base \\(b=16\\)\n\n\n\n\n\n\n\nResposta\n\n\n\n\n\n\n~\\((100101,001)_2\\)\n~\\((11,4)_{16}\\)\n~\\((11,5)_8\\)\n~\\((9,A)_{16}\\)\n\n\n\n\n\n\n1.2.3 Exercício\nQuantos algarismos são necessários para representar o número \\(937163832173947\\) em base binária? E em base 7?\n\n\n\n\n\n\nDica\n\n\n\nQual é o menor e o maior inteiro que pode ser escrito em dada base com \\(N\\) algarismos?\n\n\n\n\n\n\n\n\nResposta\n\n\n\n\n\n\\(50\\); \\(18\\).",
    "crumbs": [
      "Capítulo 1: Representação de números e aritmética de máquina",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Sistema de numeração e mudança de base</span>"
    ]
  },
  {
    "objectID": "apendices/a1-python.html",
    "href": "apendices/a1-python.html",
    "title": "Appendix A — Rápida introdução ao Python",
    "section": "",
    "text": "A.1 Sobre a linguagem Python\nNeste apêndice, discutiremos os principais aspectos da linguagem computacional Python que são essenciais para uma boa leitura desta versão do livro. O material aqui apresentado, é uma adaptação livre do Apêndice A de (Todos os Colaboradores 2016).\nPython é uma linguagem de programação de alto nível, interpretada e multi-paradigma. Lançada por Guido van Rossum1 em 1991 é, atualmente, mantida de forma colaborativa e aberta.\nPara mais informações, consulte:\nPara iniciantes, recomendamos o curso EAD gratuito no site Codecademy:",
    "crumbs": [
      "Apêndices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Rápida introdução ao Python</span>"
    ]
  },
  {
    "objectID": "apendices/a1-python.html#sobre-a-linguagem-python",
    "href": "apendices/a1-python.html#sobre-a-linguagem-python",
    "title": "Appendix A — Rápida introdução ao Python",
    "section": "",
    "text": "1 Guido van Rossum, nascido em 1956, programador de computadores dos Países Baixos.\n\nPágina oficial da linguagem Python: https://www.python.org/\nComunidade Python Brasil: http://wiki.python.org.br/\n\n\n\nhttps://www.codecademy.com/learn/python\n\n\nA.1.1 Instalação e execução\nPara executar um código Python é necessário ter instalado um interpretador para a linguagem. No site oficial do Python estão disponíveis para download os interpretadores para vários sistemas operacionais, como Linux, Mac OS e Windows. Muitas distribuições de Linux (Linux Mint, Ubuntu, etc.) têm o Python no seu sistema de pacotes (incluindo documentação em várias línguas).\nAo longo do texto, assumiremos que o leitor esteja usando um computar rodando Linux. Para outros sistemas, pode ser necessário fazer algumas adaptações.\n\n\nA.1.2 Usando Python\nO uso do Python pode ser feito de três formas básicas:\n\nusando um console Python de modo iterativo;\nexecutando um código codigo.py no console Python;\nexecutando um código Python codigo.py diretamente em terminal;\n\n\n\nA.1.3 Exercício\nConsidere o seguinte pseudocódigo:\ns = \"Olá, mundo!\". (Sem imprimir na tela o resultado.)\nsaída(s). (Imprime na tela.)\nImplemente este pseudocódigo em Python:\n\nusando diretamente um console;\ndigitando seu código em um arquivo separado e executando-o no console Python com a função execfile.\ndigitando seu código em um arquivo separado e executando-o em terminal com o comando Python.\n\n\n\n\n\n\n\nResposta\n\n\n\n\n\nSeguem as soluções de cada item:\n\nNo console temos:\n&gt;&gt;&gt; s = \"Olá, mundo!\"\n&gt;&gt;&gt; print(s)\nOlá, mundo!\nPara sair do console, digite:\n&gt;&gt;&gt; quit()\nAbra o editor de texto de sua preferência e digite o código:\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ns = 'Olá'\nprint(s)\nSalve o arquivo como, por exemplo, ola.py. No console Python, digite:\n&gt;&gt;&gt; execfile(\"ola.py\")\nAbra o editor de texto de sua preferência e digite o código:\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ns = 'Olá'\nprint(s)\nSalve o arquivo como, por exemplo, ola.py. No terminal, digite:\n$ python ola.py",
    "crumbs": [
      "Apêndices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Rápida introdução ao Python</span>"
    ]
  }
]